# system wide chromium flags

ARCH="$(arch)"
CHROMIUM_FLAGS=""
FEATURES=""

# NATIVE_WAYLAND=[on|off]
case "$XDG_SESSION_TYPE" in
   wayland)
      NATIVE_WAYLAND=on
      ;;
   x11)
      NATIVE_WAYLAND=off
      ;;
esac

# Other architectures are not tested for and should not be included yet
if [ "$ARCH" == "x86_64" ] ; then
	# GPU_INFO=[amd|intel|nvidia|default]
	# if you have a problem, it's probably because Nvidia
	GPU_INFO=$(lspci | grep -E "VGA|3D" | grep -o -i -E "amd|intel|nvidia" | sort -u | tr '[:upper:]' '[:lower:]' | xargs)
	if [ $(echo "$GPU_INFO" | wc -w) -gt 1 ]; then
		GRAPHIC_DRIVER="default"
	else
		GRAPHIC_DRIVER=${GPU_INFO:-default}
	fi

	# VULKAN_SUPPORT=[true|false]
	# Vulkan is not supported on Wayland, it is also experimental on Linux (Nvidia is less stable so let's not)
	if [ "$GRAPHIC_DRIVER" == "intel|amd|default" ] && [ "$NATIVE_WAYLAND" == "off" ] ; then
		VULKAN_SUPPORT=true
	else
		VULKAN_SUPPORT=false
	fi

	CHROMIUM_FLAGS+=" --use-gl=angle"
	FEATURES+="AcceleratedVideoDecodeLinuxGL,AcceleratedVideoDecodeLinuxZeroCopyGL,AcceleratedVideoEncoder"
	if [ "$GRAPHIC_DRIVER" == "nvidia" ] ; then
		FEATURES+=",VaapiOnNvidiaGPUs"
	fi
	if [ "$VULKAN_SUPPORT" == "true" ] ; then
		CHROMIUM_FLAGS+=" --use-angle=vulkan"
		FEATURES+=",Vulkan,DefaultANGLEVulkan,VulkanFromANGLE,VaapiIgnoreDriverChecks"
	else
		CHROMIUM_FLAGS+=" --use-angle=gl"
	fi

	if [ "$NATIVE_WAYLAND" == "off" ] ; then
		CHROMIUM_FLAGS+=" --enable-native-gpu-memory-buffers"
		CHROMIUM_FLAGS+=" --enable-gpu-memory-buffer-video-frames"
		CHROMIUM_FLAGS+=" --enable-zero-copy"
		CHROMIUM_FLAGS+=" --ignore-gpu-blocklist --disable-gpu-driver-bug-workaround"
		CHROMIUM_FLAGS+=" --enable-gpu-rasterization"
	fi

	# Nvidia has issues on Wayland
	if ! command -v nvidia-smi || [ -z "$DISPLAY" ]; then
		CHROMIUM_FLAGS+=" --ozone-platform-hint=auto"
	fi

        CHROMIUM_FLAGS+=" --enable-features=$FEATURES"
fi

# Disable crash reporting, no simple way to patch it in
CHROMIUM_FLAGS+=" --disable-breakpad"
