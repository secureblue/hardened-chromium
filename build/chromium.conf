# system wide chromium flags

ARCH="$(arch)"
FEATURES=""

# NATIVE_WAYLAND=[on|off]
case "$XDG_SESSION_TYPE" in
   wayland)
      NATIVE_WAYLAND=on
      ;;
   x11)
      NATIVE_WAYLAND=off
      ;;
esac

if [ "$ARCH" == "x86_64" ] ; then
	VULKAN_SUPPORT=off
	GPU_INFO=$(lspci | grep -E "VGA|3D" | grep -o -i -E "amd|intel|nvidia" | sort -u | tr '[:upper:]' '[:lower:]' | xargs)
	if [ $(echo "$GPU_INFO" | wc -w) -gt 1 ]; then
	    GRAPHIC_DRIVER="default"
	else
	    GRAPHIC_DRIVER=${GPU_INFO:-default}
	fi

	CHROMIUM_FLAGS=""
	if [ "$NATIVE_WAYLAND" == "off" ] ; then
	   CHROMIUM_FLAGS+=" --enable-native-gpu-memory-buffers"
	   CHROMIUM_FLAGS+=" --enable-gpu-memory-buffer-video-frames"
	   CHROMIUM_FLAGS+=" --enable-zero-copy"
	   CHROMIUM_FLAGS+=" --ignore-gpu-blocklist --disable-gpu-driver-bug-workaround"
	   CHROMIUM_FLAGS+=" --enable-gpu-rasterization"
	fi

	CHROMIUM_FLAGS+=" --use-gl=angle --enable-accelerated-video-decode"
	FEATURES+="AcceleratedVideoDecodeLinuxGL,AcceleratedVideoEncoder"
	case "$GRAPHIC_DRIVER" in
	   amd|intel)
	      if [ "$VULKAN_SUPPORT" == "on" ] ; then
	         CHROMIUM_FLAGS+=" --use-angle=vulkan"
	         FEATURES+=",Vulkan,DefaultANGLEVulkan,VulkanFromANGLE,VaapiIgnoreDriverChecks"
              else
                 CHROMIUM_FLAGS+=" --use-angle=gl"
	      fi
	      ;;
	   nvidia)
	      CHROMIUM_FLAGS+=" --use-angle=gl"
	      FEATURES+=",VaapiOnNvidiaGPUs"
	      ;;
           *)
              CHROMIUM_FLAGS+=" --use-angle=gl"
	esac

	if ! command -v nvidia-smi || [ -z "$DISPLAY" ]; then
	   CHROMIUM_FLAGS+=" --ozone-platform-hint=auto"
	fi

        CHROMIUM_FLAGS+=" --enable-features=$FEATURES"
fi

CHROMIUM_FLAGS+=" --disable-breakpad"
